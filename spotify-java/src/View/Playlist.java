package View;

import javax.swing.JLabel;
import Controller.ControlePlaylist;
import javax.swing.JTable;
import Model.Usuario;
import Model.PlaylistModel;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import View.playlist.cell.TableActionCellRender;
import View.playlist.cell.TableActionCellEditor;
import View.playlist.cell.TableActionEvent;
import javax.swing.table.DefaultTableModel;

public class Playlist extends javax.swing.JFrame {

    private String user, nome, senha;
    
    public Playlist() {
        initComponents();
        c = new ControlePlaylist(this);
    }

    public Playlist(Usuario usuario){
        initComponents();
        user = usuario.getUsuario();
        nome = usuario.getNome();
        senha = usuario.getSenha();
        
        c = new ControlePlaylist(this);    
        JTable tabela = getTabela();
        
        TableActionEvent event = new TableActionEvent() {

        @Override
        public void onView(int row) {
            // coluna 1 (nome playlist)
            //System.out.println("nome playlist:");
            String nomePlaylist = tabela.getValueAt(row, 0).toString();
            //System.out.println(nomePlaylist);

            // coluna 2 (descricao playlist)
            //System.out.println("descricao playlist:");
            String descricaoPlaylist = tabela.getValueAt(row, 1).toString();
            //System.out.println(descricaoPlaylist);

//            // coluna 3 (botao de acessar playlist)
//            System.out.println("linha: " + row);

            // acessar o playlistinfo
            // info necessária: classe Playlist (nome, descricao, Musica musica, user)
            // no PlaylistInfo: construtor com nomedaplaylist, descricao, user, musicas da playlist.

            Usuario usuario = new Usuario(user, nome, senha);
            PlaylistModel playlist = new PlaylistModel(nomePlaylist, descricaoPlaylist);
            
            
            
            // usa quando se quer acessar as informacoes de uma playlist. redireciona para o PlaylistInfo
            int idPlaylist = c.adquirirIdPlaylist(usuario, playlist);
            PlaylistModel playlist2 = new PlaylistModel(idPlaylist, nomePlaylist, descricaoPlaylist);
            

            c.redirectPlaylistInfo(usuario, playlist2);

            }
        };        
        
        tabela.getColumnModel().getColumn(2).setCellRenderer(new TableActionCellRender());
        tabela.getColumnModel().getColumn(2).setCellEditor(new TableActionCellEditor(event));
        c.addLinhasPlaylist(usuario, tabela);
    }

    public JButton getBt_new_playlist() {
        return bt_new_playlist;
    }

    public void setBt_new_playlist(JButton bt_new_playlist) {
        this.bt_new_playlist = bt_new_playlist;
    }

    public JLabel getLbl_descricao() {
        return lbl_descricao;
    }

    public void setLbl_descricao(JLabel lbl_descricao) {
        this.lbl_descricao = lbl_descricao;
    }

    public JLabel getLbl_nome_playlist() {
        return lbl_nome_playlist;
    }

    public void setLbl_nome_playlist(JLabel lbl_nome_playlist) {
        this.lbl_nome_playlist = lbl_nome_playlist;
    }

    public JLabel getLbl_playlists() {
        return lbl_playlists;
    }

    public void setLbl_playlists(JLabel lbl_playlists) {
        this.lbl_playlists = lbl_playlists;
    }

    public JLabel getLbl_voltar() {
        return lbl_voltar;
    }

    public void setLbl_voltar(JLabel lbl_voltar) {
        this.lbl_voltar = lbl_voltar;
    }

    public JTable getTabela() {
        return tabela;
    }

    public void setTabela(JTable tabela) {
        this.tabela = tabela;
    }

    public JLabel getLbl_criar_nova_playlist() {
        return lbl_criar_nova_playlist;
    }

    public JTextArea getTxt_descricao() {
        return txt_descricao;
    }

    

    public JTextField getTxt_nome_playlist() {
        return txt_nome_playlist;
    }

    public void setTxt_nome_playlist(JTextField txt_nome_playlist) {
        this.txt_nome_playlist = txt_nome_playlist;
    }
    
    
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_voltar = new javax.swing.JLabel();
        lbl_playlists = new javax.swing.JLabel();
        bt_new_playlist = new javax.swing.JButton();
        lbl_nome_playlist = new javax.swing.JLabel();
        txt_nome_playlist = new javax.swing.JTextField();
        lbl_descricao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        lbl_criar_nova_playlist = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_descricao = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        lbl_voltar.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lbl_voltar.setText("←");
        lbl_voltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_voltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_voltarMouseClicked(evt);
            }
        });

        lbl_playlists.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lbl_playlists.setText("Playlists");

        bt_new_playlist.setText("nova playlist");
        bt_new_playlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_new_playlistActionPerformed(evt);
            }
        });

        lbl_nome_playlist.setText("nome da playlist");

        txt_nome_playlist.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nome_playlistKeyPressed(evt);
            }
        });

        lbl_descricao.setText("descrição");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nome", "descrição", "acessar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setRowHeight(30);
        jScrollPane1.setViewportView(tabela);

        lbl_criar_nova_playlist.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lbl_criar_nova_playlist.setText("Criar nova playlist");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txt_descricao.setColumns(20);
        txt_descricao.setLineWrap(true);
        txt_descricao.setRows(5);
        txt_descricao.setBorder(null);
        txt_descricao.setPreferredSize(new java.awt.Dimension(160, 80));
        txt_descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_descricaoKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txt_descricao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lbl_voltar)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(lbl_playlists))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_descricao)
                                    .addComponent(lbl_nome_playlist)
                                    .addComponent(lbl_criar_nova_playlist)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(txt_nome_playlist, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt_new_playlist)
                                .addGap(38, 38, 38)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_voltar)
                    .addComponent(lbl_playlists))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_criar_nova_playlist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_nome_playlist)
                        .addGap(5, 5, 5)
                        .addComponent(txt_nome_playlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_descricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_new_playlist)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_voltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_voltarMouseClicked
        // TODO add your handling code here:
        // h = new Home();
        //h.setVisible(true);
        //this.setVisible(false);

        Usuario usuario2 = new Usuario(user,nome,senha);
        c.redirectPaginaHome(usuario2);
    }//GEN-LAST:event_lbl_voltarMouseClicked

    private void bt_new_playlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_new_playlistActionPerformed
        // TODO add your handling code here:
        Usuario usuario2 = new Usuario(user,nome,senha);

        c.novaPlaylist(usuario2);
    }//GEN-LAST:event_bt_new_playlistActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void txt_nome_playlistKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nome_playlistKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
        Usuario usuario2 = new Usuario(user,nome,senha);

        c.novaPlaylist(usuario2);

        }
    }//GEN-LAST:event_txt_nome_playlistKeyPressed

    private void txt_descricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descricaoKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
        Usuario usuario2 = new Usuario(user,nome,senha);

        c.novaPlaylist(usuario2);

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txt_descricaoKeyPressed

    /**
     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Playlist().setVisible(true);
//            }
//        });
//    }

    private ControlePlaylist c;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_new_playlist;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_criar_nova_playlist;
    private javax.swing.JLabel lbl_descricao;
    private javax.swing.JLabel lbl_nome_playlist;
    private javax.swing.JLabel lbl_playlists;
    private javax.swing.JLabel lbl_voltar;
    private javax.swing.JTable tabela;
    private javax.swing.JTextArea txt_descricao;
    private javax.swing.JTextField txt_nome_playlist;
    // End of variables declaration//GEN-END:variables
}
